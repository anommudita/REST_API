Pertemuan 1  Apa itu pertemuan API ?
Sebelum membuat rest-api kita harus mengetahui apa itu REST API?

API(Application Programming Interface) ?
- API adalah sekumpulan fungsi, subroutine, protokol komunikasi atau kakas/tools untuk membuat perangkat lunak
- Antarmuka yang berupa kumpulan fungsi yang dapat dipanggil atau dijalankan oleh program lain
- Penerapannya sangat luas
  - Bahasa Pemrograman
  - Library & Framework
  - Sistem Operasi
  - Web API / Web Service / REST API
    "Sebuah sistem perangkat lunak yang dibuat untuk mendukung interoperabilitas / interaksi antara 2 aplikasi yang berbeda melalui jaringan."
	SOAP (Simple Object Access Protokol)
	REST (REpresentational State Transfer)


Interface / antarmuka??
Bagian yang sama antara dua atau lebih komponen terpisah pada sebuah sistem komputer(Motherboard Interface).
memasang RAM di motherboard dan tidak mungkin salah slot karena sudah tersedia slotnya masing". Contoh lagi audio interface. tidak mungkin gitar kita langsung dimasukan ke komputer langsung, sehingga kita butuh audio interface.

Apa yang akan kita pelajari?
1. Apa itu REST API
2. JSON ==> membuat & mengakses
3. Public API
   - simple / complex auth
4. Membuat REST Server

API Testing tools
Postman
Insomnia


Pertemuan 2 REST & HTTP

REST API ? 
"Gaya arstektual perangkat lunak yang didalamnya mendefiniskan aturan-aturan untuk membuat web service" ==> sebuah style ngoding saja!

API == REST API

API bisa dianalogikan dengan aplikasi traveloka dan aplikasi e-Banking bisa transfer dibank lain dan bisa membayar wifi, membeli voucher
API disatu sisi memudahkan dan di satu sisi bisa dijadikan bisnis
API bisa dianalogikan di sebuah restoran
REST API ==> Menu Makanan (aturanya)
API ==> Penghubung atau Pelayan Restoran
Request & Response ==> Customer
Data yang dikirimkan diterima berupa JSON


REST API 
- REpresentasional State Tranfer
- Gaya perancangan / Architectural Sytle
- Stateless tanpa state ya
- By. Roy Fielding, disertai PhD-nya
- Hampi selalu menggunakan HTTP
- Memungkinkan interaksi antar mesin




Pertemuan #3 Apa itu JSON
JSON (javaScript Object Notation) adalah sebuah file format standar yang menggunakan tulisan yang dapat dibaca oleh manusia untuk
pertukaran data, yang di dalamnya berisi pasangan antara Key dan Value. Seperti Array Assosiative diPHP dan Object di javaScript

JSON 
- format pertukaran data texstual yang sangat ringan 
- Sintaksnya sangat sederhana dan jelas (dibandingkan XML)
- Dapat digunakan pada beragam bahasa pemrograman ==> gambang bro pakai bahasa apa saja support kok!
- Tiap bahasa pemrograman memiliki cara tersendiri untuk berinteraksi dengan JSON
- Dibuat berdasarkan format Object pada javaScript ==> Pelajarin Fundamental javaScript!
- Digunakan juga untuk file konfigurasi(sering digunakan di framework 
tidak disarankan karena memiliki 1 kekurangan yaitu tidak bisa menggunakan sintaks komentar) ==> penting sintaks comment pada konfigurasi!
- Tipe File JSON memiliki ekstensi .JSON
- Format JSON dibuat dan diusulkan oleh Douglas Crockford(Jagoan javaScript)


JSON VS XML
Sebelumnya format terpopuler adalah XML, ayo kita bandingkan dengan javaScript
- Format JSON seperti Object pada javaScript dan Format XML lebih duplikatif seperti TAG HTML

Object
Object pada javascript adalah kumpulan property, dan property ditulis dalam bentuk pasangan antara key dan Value
contoh Object Literal :

var Orang = {
    nama  : 'Ida Bagus Anom Mudita', ==> property
    umur : 21, ==> property
    pekerjaaan : 'Arsitek Teknikal', ==> property
    sapa :function () { ==> nilai pada key bisa menggunkaan method 
        return 'Hi , nama saya '+ this.nama + ' usia saya ' + this.umur + ' tahun, dan saya adalah seorang ' + this.pekerjaan;
    } 
}
di JSON tidak memiliki method pada nilai value-nya dan jika di Javascript bisa menerapkan method sebagai value-nya!

JSON cara membuat Object dan aturan membuat property

{
    "nama" : "Ida Bagus Anom Mudita",
    "umur" : 21,
    "pekerjaan" : "Arsitek Teknikal" 
}

"key" : value 

Tipe Data dari value pada JSON
- Boolean = true atau false,
- Array = ["value1", "Value2", "Value3", ...] isi nilainya bebas bisa number, string, Boolean, bahkan obejct 
- String = teks / unicode, dibungkus menggunakan ""
- Object = { "key" : "value"}
- Number = interger atau float
- Null = null
Biar Gampang jadi BASONN agar mudah mengingatnya!


Bekerja Dengan JSON
 - Method Di PHP 
 json_encode() = Array atau Object diubah menjadi JSON
 json-decode() = JSON diubah menjadi Array atau Object
- Mengakses JSON ditempat lain atau diluar bro seperti harga pizza hut 
file_get_contents()


 - Method Di Javascript
JSON.stringify()  ==> seperti json_encode == Object ke JSON
JSON.parse()   ==> seperti json_decode == JSON ke Object
- Mengakses JSON
AJAX
    - XMLHttpRequest atau vanila javaScript
    - JQuery  ==> download jquey uncompress dan jangan pilih slim karena tidak ada ajax-nya 
    dengan hanya menggunakan 1 function saja, the best lah jquey

action 
1. Membuat file coba.json
1. Cara Akses rest-api(coba.json) di PHP
2. Cara Akses rest-api(coba.json) di Javascript


Pertemuan #4 BEKERJA DENGAN JSON
pizza.json sudah ada menu pizza hut, nama key yaitu "menu" dan value-nya berbentuk array yang berisikan object"

Same-origin Policy : 
- Kebijakan browser untuk Mengakses dan menampilkan data / script/ document dari tempat diluar domain-nya
- Membuat kita tidak bisa Mengakses data(.json) dari luar domain/website
- jika kita memiliki rest server jika tidak dijinkan maka kita tidak akan bisa sharing, karena ada CORS dan solusi harus konfigurasi 
terlebih dahulu CORS-nya

CORS (Cross Origin Resourse Sharing)
- Mekanisme yang membuat kita dapat Mengakses sebuah Resourse(data, document, script) dari domain lain
- Caranya adalah dengan membuat server memperbolehkan adanya akses data dari luar domain
- Modifikasi Access-Control-Allow-Origin
- Membuat file .httaccess , berikut codenya!

<IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin "*"
</IfModule>

- atau dengan menggunakan teknik JSONP atau JSON with Pading

action :
1. Implementasi menggunakan PHP
2. Implementasi menggunkaan Javascript



Pertemuan #5 Apa itu Public API atau OPEN API

Terhubung dengan Public API yang dimiliki oleh orang lain, tetapi sama saja dengan pertemuan sebelumnya dengan menggunakan file .json
yang sudah digenerate oleh Public API

Sebuah API(REST API) yang dapat diakses secara public, yang di dalamnya tersedia aturan untuk developer agar dapat mengakses data.


Public API 
- https://any-api.com
- https://github.com/toddmotto/public-apis
- https://github.com/farizdotid

Jika kita memilih API kita harus memperhatikan Otentikasi-nya (Auth)
- Tanpa Otentikasi = Terhubung dengan bebas dan kita harus juga memperhatikan Resourse dari Rest Server-nya
- Key / Token = Untuk mengakses ke API orang lain, contohnya dengan cara login misalnya dan biasanya diberikan batasan req 1000/hari 
jika ingin req lebih maka API tersebut memberikan layanan berbayar
- OAuth = login dengan menggunakan facebook , gmail dll
- Aturan CORS ada didokumentasinya

action :
1.siapkan aplikasi postman untuk melihat apakah berhasil kita mengambil datanya atau tidak.
2. Menyoba cara mengambil data API menggunakan postman
3. Membuat movie kaliuntu menggunakan data API 


Pertemuan #6 Youtube & Instagram (Menggunakan cURL)

API Client :
1. file_get_contents() ==> bahasa PHP bisa juga konek ke API
2. ajax ==> tidak aman karena setiap mengakses api akan terlihat kode apikey-nya di konsole ==> solusinya dengan cara beri aksen login atau OAuth
3. cURL ==> bahasa di PHP


Actions : 
1. Menggunakan Tampilan Ngobar Bootstrap 4.0
2. menampilkan jumlah subscriber dari youtube dan sosial media dari instagram
3. lebih suka membaca dokumentasi hehe!


Pertemuan 7 REST API SERVER Menggunakan CodeIgniter #3

Di pertemuan ini kita akan membuat Restful API atau REST Server dengan bantuan framework Codeigniter, bisa juga membuat dengan framework
lain dan menggunakan bahasa pemrograman yang lain

Study kasus-nya mengelola data mahasiswa dan membuat rest api yang bisa terhubung dengan client yang bisa get, post, delete, dan put data
itu endpoint-nya


action : 
1. Download dulu folder CI3 versi latest
2. Sebelum menggunakan CI3 kita harus mengkonfigurasi dasar dulu!
- folder config -> config.php ->  cari BASE_URL lalu ganti dengan menggunakan url dilocalhost
- seperti ini $config['base_url'] = 'http://localhost/REST_API/pertemuan_7/CodeIgniter-3.1.13/';
- hapus file index.php --> seperti ini $config['index_page'] = '';
- membuat file httaccess didalam folder rootnya ==> buka  documentation CI lalu cari CodeIgniter URLs
 isi code : 
 RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php/$1 [L]

3. Buat database kalian ya, lalu config dengan cara seperti dibawah ini :
 - buka autoload.php lalu berikan nilai database ==> $autoload['libraries'] = array('database');
 - satu lagi ada di helper dan beri nilai url ==>  $autoload['helper'] = array('url'); ==> supaya aktif base_url

4. Buka database.php lalu berikan username dan nama database yang kalian akan hubungkan dengan ci#3. saya membuat Database dengan 
mencopy sql dari webunpas di pertemuan 7 rest_server

5. Membuat REST_API dengan menggunakan library dari chriskacerguis/codeigntier-restserver cari di github lalu download
6. copy file rest.php yang ada divendor lalu paste di difolder config
7 config bagian config.php yang ada difolder config ===> $config['composer_autoload'] = FCPATH . 'vendor/autoload.php', karena kita mengakses file yang ada 
luar CI#3

8. Membuat endpoint atau request method get,post,put, delete data (dengan kondisi)
9. Membuat class mahaiswa ==> tertera code dan comment
10. Membuat model di folder model dan diberikan nama  Mahasiswa_model yang ada code query builder sql


Pertemuan_8 REST API Autentikasi

Authentication pada aplikasi kita bagaimana aplikasi nantinya tidak bisa diakses oleh sembarangan begitu saja, jadi kita membutuhkan
sebuah API KEY. Setelah sudah menggunakan API KEY kita akan membatasi penggunannya api-nya
selain key kita menambahkan username dan password untuk Authentication-nya.

Kita menggunakan library-nya hehe!


action : 
1. Buka File rest.php yang ada diconfig
2. Baca Dokumentasinya disana dan cari REST API Key Table Name
$config['rest_keys_table'] = 'keys'; ==> default nama tablenya keys jika kali ingin mengubahnya ganti saja value-nya
3. Copy Rest Enable Key ke phpmyadmin untuk membuat table api-key-nya di database rest_server yang kita buat sebelumnya-nya
4. $config['rest_enable_keys'] = false; ==> ubah menjadi true untuk mengaktifkan api-keynya
5. $config['rest_key_name'] = 'X-API-KEY'; ==> nama key kalian, contoh untuk mengakses title apa parameternya agar title filmnya 
mengembalikan nilainya!

6. kita insert key-nya yang ada di table keys. mekanisme harus login terlebih dahulu dan verifiaksi akun sehingga key bisa digenerate
dan disimpan di database secara otomatis.

7. sekarang jika kita mengakses api harus sudah isi isi apikey-nya ==> X-API-KEY

8. Mencoba feature limit, baca langsung dokumentasi REST ENABLE LImits
- $config['rest_enable_limits'] = true; ==> beri nilai true
- membuat table limits ==> copy dengan script query-nya
- $this->methods['METHOD_NAME']['limit'] = [NUM_REQUESTS_PER_HOUR]; ==> copy dan paste di mahaiswa.php di constructor
limitnya per method ==> get, post , delete, put limitnya perjam ya !

9. Autentikasi lihat dokumentasinya bagian REST LOGIN
  - $config['rest_auth'] = 'basic; ==> value ganti menjadi true sehingga feature Autentikasi aktif dan pilih menu basic login 
  dipostman!
  - $config['rest_valid_logins'] = ['admin' => '1234']; ==> data Autentikasi-nya kita buat secara manual terlebih dahulu ya 
  - Pilih Authorization di postman lalu pilih Authorzation masukan username dan password
  - $config['auth_source'] = ''; ==> beri nilai kosong agar tidak eror

10. $config['rest_valid_logins'] = ['admin' => '1234', 'anommudita' => 'rahasiabanget123'];
    - jika ingin menambahkan akunnya tambah saja dengan cara manual 


Pertemuan_9 Membuat REST CLIENT

Membuat REST Client pada pertemuan ini dengan membuat aplikasi sederhana

REST Client 
- file_get_contents() ==> fungsi hanya bisa endpoint GET saja
- AJAX  ==> fungsi hanya bisa endpoint GET saja
- cURL  ==> fungsi bisa menggunkan beberapa endpoint GET,POST,PUT,DELETE

Dipertemuan ini kita akan menggunakan library yang bernama Guzzle PHP
Guzzle merupakan sebuah HTTP Client yang bisa request data server dengan mudah lebih simple bro hehee!

- Harus Paham CodeIgniter 3
- Harus sudah install Composer karena untuk mengunduh library Guzzle

Study Case-nya mengambil data seperti di pertemuan 5 namun menggunakan feature Guzzle
1. Membuat file guzzle.php
2. Download Library di Composer ==> ketikan perintah ini composer require guzzlehttp/guzzle:^7.0
3. Mencoba guzzle di guzzle.php untuk mengambl data API OMDB (api data film)
4. Mencopy sistem yang kita buat sebelumnya yang menggunakan framework Ci 3 (CRUD)
5. Download Composer lalu atur config.php agar terhubung dengan guzzle
$config['composer_autoload'] = FCPATH;
apa isi FCPATH ??? var_dump(FCPATH); die;
C:\xampp\htdocs\REST_API\rest_api_client\" isinya ini! (url utama bro!)
6. Menghubungkan REST_API_SERVER dengan mengubah code didalam Mahasiswa_model.php
(CRUD menggunakan API)